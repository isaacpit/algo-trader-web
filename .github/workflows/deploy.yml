name: Deploy to GitHub Pages

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "23"
          cache: "npm"


      - name: Install dependencies
        run: >
          npm --version 
          && npm ci

      - name: Show file structure
        run: |
          echo "=== Current Working Directory ==="
          pwd
          echo ""
          echo "=== Full File Structure ==="
          find . -type f -name "*.js" -o -name "*.jsx" -o -name "*.json" -o -name "*.yml" -o -name "*.yaml" | head -50
          echo ""
          echo "=== Package.json ==="
          cat package.json
          echo ""
          echo "=== Src Directory Structure ==="
          find src -type f | sort
          echo ""
          echo "=== Node Modules Check ==="
          ls -la node_modules/ | head -10
          echo ""
          echo "=== Environment Variables ==="
          echo "NODE_ENV: $NODE_ENV"
          echo "NPM_CONFIG_LOGLEVEL: $NPM_CONFIG_LOGLEVEL"
          echo "VITE_GOOGLE_CLIENT_ID: ${VITE_GOOGLE_CLIENT_ID:+SET}"
          echo "VITE_GOOGLE_REDIRECT_URI: ${VITE_GOOGLE_REDIRECT_URI:+SET}"
          echo "VITE_API_BASE_URL: ${VITE_API_BASE_URL:+SET}"

      - name: Check formatting
        run: npm run format:check

      - name: Run linting
        run: npm run lint:check

      - name: Check for cross-platform issues
        run: |
          echo "Checking for case sensitivity issues..."
          find src -name "*.jsx" -o -name "*.js" | while read file; do
            filename=$(basename "$file")
            dirname=$(dirname "$file")
            # Check if there are any files with different casing
            if ls "$dirname" | grep -i "^${filename}$" | wc -l | grep -q "2"; then
              echo "ERROR: Case sensitivity issue found in $dirname"
              ls "$dirname" | grep -i "^${filename}$"
              exit 1
            fi
          done

          echo "Checking import paths..."
          find src -name "*.jsx" -o -name "*.js" | while read file; do
            # Check for relative imports that might be case-sensitive
            if grep -n "import.*from.*['\"]\." "$file"; then
              echo "Found relative import in $file - verifying path exists..."
            fi
          done

  deploy:
    runs-on: ubuntu-latest
    needs: lint-and-test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Show file structure before build
        run: |
          echo "=== Current Working Directory ==="
          pwd
          echo ""
          echo "=== Full File Structure ==="
          find . -type f -name "*.js" -o -name "*.jsx" -o -name "*.json" -o -name "*.yml" -o -name "*.yaml" | head -50
          echo ""
          echo "=== Src Directory Structure ==="
          find src -type f | sort
          echo ""
          echo "=== Key Files Check ==="
          echo "Package.json exists: $(test -f package.json && echo 'YES' || echo 'NO')"
          echo "Package-lock.json exists: $(test -f package-lock.json && echo 'YES' || echo 'NO')"
          echo "Navbar.jsx exists: $(test -f src/components/Navbar.jsx && echo 'YES' || echo 'NO')"
          echo "PageLayout.jsx exists: $(test -f src/components/layout/PageLayout.jsx && echo 'YES' || echo 'NO')"
          echo ""
          echo "=== Import Path Test ==="
          node -e "
            try {
              require('./src/components/Navbar.jsx');
              console.log('✅ Navbar.jsx can be required');
            } catch (e) {
              console.log('❌ Navbar.jsx cannot be required:', e.message);
            }
          "

      - name: Build project
        env:
          VITE_GOOGLE_CLIENT_ID: ${{ secrets.VITE_GOOGLE_CLIENT_ID }}
#          VITE_GOOGLE_REDIRECT_URI: ${{ secrets.VITE_GOOGLE_REDIRECT_URI }}
#          VITE_API_BASE_URL: ${{ secrets.VITE_API_BASE_URL }}
        run: npm run build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          cname: algotraders.dev
